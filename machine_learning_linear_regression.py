# -*- coding: utf-8 -*-
"""Machine Learning - Linear Regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11lVQzSsBCLrHOYucmwJZk5zLYwbim4kT
"""

import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
import numpy as np
file_path = '/Python Data analysis machine learning sample file 1.xlsx'
df = pd.read_excel(file_path)
print(df.head())

X = df[['Age', 'Experience', 'Knowledge', 'Punctuality', 'Communication']]
y = df['Sales']
model = LinearRegression()
model.fit(X, y)

coefficients = model.coef_
intercept = model.intercept_

print("\nCoefficients:")
for col, coef in zip(X.columns, coefficients):
    print(f"{col}: {coef}")
print(f"Intercept: {intercept}")

predictions = model.predict(X)

age_range = np.linspace(df['Age'].min(), df['Age'].max(), 100).reshape(-1, 1)
predicted_sales_line = model.predict(np.column_stack([age_range, np.zeros_like(age_range), np.zeros_like(age_range), np.zeros_like(age_range), np.zeros_like(age_range)]))
plt.figure(figsize=(10, 6))
plt.scatter(df['Age'], y, color='blue', label='Actual Sales')
plt.scatter(df['Age'], predictions, color='red', label='Predicted Sales')
plt.plot(age_range, predicted_sales_line, color='green', label='Regression Line', linewidth=2)
for i in range(len(df)):
    plt.text(df['Age'].iloc[i], y.iloc[i] + 1,  # Offset for actual sales
             str(y.iloc[i]),
             fontsize=8,
             ha='center',
             color='black',
             bbox=dict(facecolor='white', alpha=0.5, edgecolor='none'))

for i in range(len(df)):
    plt.text(df['Age'].iloc[i], predictions[i] + 1,  # Offset for predicted sales
             f"{predictions[i]:.2f}",  # Format to 2 decimal places
             fontsize=8,
             ha='center',
             color='black',
             bbox=dict(facecolor='red', alpha=0.5, edgecolor='none'))  # Background for better visibility
plt.xlabel('Age')
plt.ylabel('Sales')
plt.title('Sales vs Age with Regression Line')
plt.legend()
plt.grid()
plt.show()

